# Destroys resource when no longer needed.

name: Destroy Terraform Infrastructure from AWS

on:
  pull_request:
    branches:
      - main
    types:
      - closed
  workflow_dispatch:

env:
  OIDC_ROLE: ${{ secrets.GITHUBACTIONSROLE }}
  AWS_ACCOUNT_ID: ${{ secrets.ACCOUNT }}
  ENV_VAR: dev
  STATE_BUCKET: jbterraformwork
  STATE_KEY: simple-log-service-infra/dev/terraform.tfstate

jobs:
  terraform:
    name: Terraform-Destroy
    runs-on: ubuntu-latest
    environment: AWS
    if: github.event.pull_request.merged == true && contains(join(github.event.pull_request.labels.*.name, ','), 'destroy')

    # Grants the workflow secure AWS access via OIDC (id-token: write) and read-only repo access (contents: read).
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.OIDC_ROLE }}
          aws-region: us-east-1

      # Sets up Terraform CLI version 1.6.6 in the GitHub Actions runner using the official HashiCorp action.
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init -backend-config="key=${STATE_KEY}"

      - name: Select Dev Workspace
        run: terraform workspace select dev || terraform workspace new dev
      
      # Sync state with actual infrastructure
      - name: Terraform Refresh
        run: terraform refresh

      - name: Terraform Destroy
        run: terraform destroy -auto-approve

      - name: Delete Terraform state file from S3
        run: |
          aws s3 rm s3://${STATE_BUCKET}/${STATE_KEY}
